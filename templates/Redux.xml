<templateSet group="Redux">
  <template name="rxc" value="function mapStateToProps(state) {&#10;  return { $VAR$: state.$VAR$ };&#10;}&#10;&#10;export default connect(mapStateToProps)($END$);" description="Redux Connect" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rxcc" value="import React from 'react';&#10;import PropTypes from 'prop-types';&#10;import { connect } from 'react-redux';&#10;&#10;export class $NAME$ extends React.Component {&#10;  static propTypes = {&#10;    dispatch: PropTypes.func.isRequired,&#10;    $STATE$: PropTypes.$TYPE$.isRequired,&#10;  };&#10;  render() {&#10;    return (&#10;      &lt;div key=&quot;$NAME$&quot;&gt;&#10;        $NAME$&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;&#10;function mapStateToProps(state) {&#10;  return { $STATE$: state.$STATE$ };&#10;}&#10;&#10;export default connect(mapStateToProps)($NAME$);" description="React Redux Class" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="STATE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="ico" value="import { connect } from 'react-redux';$END$" description="import connect" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>
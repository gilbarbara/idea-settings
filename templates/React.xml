<templateSet group="React">
  <template name="rcdm" value="componentDidMount () {&#10;&#9;$END$&#10;}&#10;" description="React-componentDidMount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcwu" value="componentWillUpdate (nextProps, nextState) {&#10;&#9;$END$&#10;}&#10;" description="React-componentWillUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcwun" value="componentWillUnmount () {&#10;&#9;$END$&#10;}&#10;" description="React-componentWillUnmount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcwrp" value="componentWillReceiveProps (nextProps) {&#10;&#9;$END$&#10;}&#10;" description="React-componentWillReceiveProps" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcwm" value="componentWillMount () {&#10;&#9;$END$&#10;}&#10;" description="React-componentWillMount" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcdu" value="componentDidUpdate (prevProps, prevState) {&#10;&#9;$END$&#10;}&#10;" description="React-componentDidUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rpt" value="static propTypes = {&#10;&#9;$PROP$: PropTypes.$TYPE$.isRequired,$END$&#10;};" description="React-propTypes" toReformat="true" toShortenFQNames="true">
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ren" value="render () {&#10;&#9;return (&#10;&#9;&#9;$END$&#10;&#9;);&#10;}" description="React-render" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rss" value="this.setState({&#10;    $KEY$: $END$&#10;});" description="React-setState" toReformat="true" toShortenFQNames="true">
    <variable name="KEY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdp" value="static defaultProps = {&#10;&#9;$VAR$: $END$,&#10;};" description="React-defaultProps" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="false" />
      <option name="JS_STATEMENT" value="false" />
    </context>
  </template>
  <template name="rcc" value="import React from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;export default class $VAR$ extends React.Component {&#10;&#9;render () {&#10;&#9;&#9;return (&#10;&#9;&#9;&#9;&lt;div key=&quot;$VAR$&quot;&gt;$END$&lt;/div&gt;&#10;&#9;&#9;);&#10;&#9;}&#10;}&#10;" description="React Component" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rp" value="$NAME$: PropTypes.$END$," description="React.propTypes" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rctx" value="static contextTypes = {&#10;&#9;$START$: React.PropTypes.$END$&#10;};" description="React-Context Child" toReformat="true" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcxp" value="static childContextTypes = {&#10;&#9;$VAR$: React.PropTypes.$TYPE$,&#10;};&#10;&#10;getChildContext() {&#10;&#9;return {&#10;&#9;&#9;$VAR$: this.$END$&#10;&#9;};&#10;}" description="React-Context Provider" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rdh" value="dangerouslySetInnerHTML={{ __html: $END$ }}" description="React-dangerouslySetInnerHTML" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="cs" value="const { $VAR$ } = this.state;$END$" description="const state" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cp" value="const { $VAR$ } = this.props;$END$" description="const props" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rpr" value="$NAME$: PropTypes.$TYPE$.isRequired,$END$" description="React.propTypes required" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ccp" value="constructor (props) {&#10;    super(props);&#10;    &#10;    this.state = {&#10;      $END$&#10;    };&#10;}" description="Constructor with props" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rptc" value="$NAME$.propTypes = {&#10;&#9;$PROP$: PropTypes.$TYPE$.isRequired$END$&#10;};" description="React-propTypes" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rsc" value="import React from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;const $NAME$ = ({ $PROP$ }) =&gt; {&#10;  return (&lt;div&gt;$NAME$&lt;/div&gt;);&#10;};&#10;&#10;$NAME$.propTypes = {&#10;  $PROP$: PropTypes.object.isRequired,&#10;};&#10;&#10;export default $NAME$;&#10;" description="React Stateless Component" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cpd" value="const { dispatch, $VAR$ } = this.props;&#10;&#10;dispatch($END$);" description="const props with dispatch" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cpn" value="const { $VAR$ } = nextProps;$END$" description="const nextProps" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rgdsfp" value="static getDerivedStateFromProps(props, state) {&#10;    return state;&#10;}" description="React-getDerivedStateFromProps" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rscu" value="shouldComponentUpdate (nextProps, nextState) {&#10;&#9;return true;$END$&#10;}&#10;" description="React-shouldComponentUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="&lt;abbreviation&gt;" value="getSnapshotBeforeUpdate(prevProps, prevState) {&#10;    return null;$END$&#10;}" description="React-shouldComponentUpdate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>